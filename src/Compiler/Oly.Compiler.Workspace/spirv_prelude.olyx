#target "spirv: lib"
#library

#[open]
module OlyPrelude

// Types

#[intrinsic("bool")]
alias bool

#[intrinsic("int32")]
alias int32

#[intrinsic("uint32")]
alias uint32

#[intrinsic("float32")]
alias float32

#[intrinsic("by_ref")]
alias byref<T>

#[intrinsic("by_ref_read_only")]
alias inref<T>

#[intrinsic("by_ref_write_only")]
alias outref<T>

#[import("spirv", "__oly_spirv_", "vec2")]
struct vec2 =

    public field mutable X: float32
    public field mutable Y: float32

#[import("spirv", "__oly_spirv_", "vec3")]
struct vec3 =

    public field mutable X: float32
    public field mutable Y: float32
    public field mutable Z: float32

#[import("spirv", "__oly_spirv_", "uvec3")]
struct uvec3 =

    public field mutable X: uint32
    public field mutable Y: uint32
    public field mutable Z: uint32

#[import("spirv", "__oly_spirv_", "vec4")]
struct vec4 =

    public field mutable X: float32
    public field mutable Y: float32
    public field mutable Z: float32
    public field mutable W: float32

    new(float32)

    new(v: vec2, z: float32, w: float32)

// Attributes

#[import("spirv", "__oly_spirv_", "position")]
#[intrinsic("importer")]
struct positionAttribute = new()

#[import("spirv", "__oly_spirv_", "point_size")]
#[intrinsic("importer")]
struct point_sizeAttribute = new()

#[import("spirv", "__oly_spirv_", "block")]
#[intrinsic("importer")]
struct blockAttribute = new()

#[import("spirv", "__oly_spirv_", "location")]
#[intrinsic("importer")]
struct locationAttribute = new(number: uint32)

#[import("spirv", "__oly_spirv_", "global_invocation_id")]
#[intrinsic("importer")]
struct global_invocation_idAttribute = new()

#[import("spirv", "__oly_spirv_", "uniform")]
#[intrinsic("importer")]
struct uniformAttribute = new()

#[import("spirv", "__oly_spirv_", "descriptor_set")]
#[intrinsic("importer")]
struct descriptor_setAttribute = new(uint32)

#[import("spirv", "__oly_spirv_", "binding")]
#[intrinsic("importer")]
struct bindingAttribute = new(uint32)

#[import("spirv", "__oly_spirv_", "buffer_block")]
#[intrinsic("importer")]
struct buffer_blockAttribute = new()

#[import("spirv", "__oly_spirv_", "storage_buffer")]
#[intrinsic("importer")]
struct storage_bufferAttribute = new()

// Operations

/*
#[intrinsic("unsafe_cast")]
int32(uint32): int32

#[intrinsic("unsafe_cast")]
uint32(int32): uint32
*/

#[intrinsic("address_of")]
(&)<T>(T): inref<T>

#[intrinsic("address_of")]
(&)<T>(T): byref<T>

#[intrinsic("equal")]
(==)(bool, bool): bool

#[intrinsic("equal")]
(==)(int32, int32): bool

#[intrinsic("equal")]
(==)(uint32, uint32): bool

#[intrinsic("equal")]
(==)(float32, float32): bool

#[intrinsic("get_element")]
(`[]`)<T>(T[], index: uint32): T

#[intrinsic("get_element")]
(`[]`)<T>(mutable T[], index: uint32): T

#[intrinsic("set_element")]
(`[]`)<T>(mutable T[], index: uint32, T): ()

// BuiltIn

Position: vec4
    #[position]
    set

GlobalInvocationId: uvec3
    #[global_invocation_id]
    get

// GLSL.std.450
// https://registry.khronos.org/SPIR-V/specs/unified1/GLSL.std.450.html

#[import("spirv", "GLSL.std.450", "1")]
round(float32): float32