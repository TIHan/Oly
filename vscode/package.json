{
	"name": "oly",
	"displayName": "Oly",
	"description": "Oly for Visual Studio Code",
	"author": "Will F. Smith",
	"license": "MIT",
	"version": "0.0.1",
	"publisher": "vscode",
	"repository": {
		"type": "git",
		"url": "https://github.com/tihan/oly"
	},
	"engines": {
		"vscode": "^1.64.0"
	},
	"dependencies": {
		"typescript": "^4.9.4",
		"vscode-languageclient": "^7.0.0"
	},
	"devDependencies": {
		"@types/node": "^18.11.18",
		"@types/vscode": "1.64.0"
	},
	"scripts": {
		"vscode:prepublish": "npm run compile",
		"compile": "tsc -p ./",
		"watch": "tsc -p ./",
		"pretest": "npm run compile && npm run lint",
		"lint": "eslint src --ext ts",
		"test": "node ./out/test/runTest.js"
	},
	"categories": [
		"Programming Languages"
	],
	"activationEvents": [
		"onLanguage:oly"
	],
	"main": "./out/extension",
	"contributes": {
		  "viewsContainers": {
				"activitybar": [
				{
					"id": "oly-explorer",
					"title": "Oly Explorer",
					"icon": "./icons/oly-dark.png"
				}
			]
		},
		"snippets": [
			{
				"language": "oly",
				"path": "./snippets/oly.json"
			}
		],
		"taskDefinitions": [],
		"views": {
			"oly-explorer": [
				{
					"id": "oly.solutionExplorer",
					"name": "Solution Explorer",
					"when": "resourceLangId == oly",
					"icon": "./icons/oly-dark.png",
					"visibility": "visible"
				},
				{
					"id": "oly.syntaxTree",
					"name": "Syntax Tree",
					"when": "resourceLangId == oly && config.oly.syntaxTree.explorer.enabled",
					"icon": "./icons/oly-dark.png",
					"visibility": "collapsed"
				}
			]
		},
		"menus": {
			"editor/context": [
				{
					"command": "oly.getSyntaxTree",
					"when": "resourceLangId == oly && config.oly.syntaxTree.explorer.enabled"
				}
			],
			"commandPalette": [
				{
					"command": "oly.compile",
					"when": "resourceLangId == oly"
				},
				{
					"command": "oly.changeActiveProject",
					"when": "resourceLangId == oly"
				},
				{
					"command": "oly.changeActiveConfiguration",
					"when": "resourceLangId == oly"
				},
				{
					"command": "oly.cleanWorkspace",
					"when": "resourceLangId == oly"
				}
			]
		},
		"commands": [
			{
				"command": "oly.getSyntaxTree",
				"title": "Go to Syntax Node",
				"when": "resourceLangId == oly && config.oly.syntaxTree.explorer.enabled"
			},
			{
				"command": "oly.compile",
				"title": "Compile Active Project",
				"when": "resourceLangId == oly"
			},
			{
				"command": "oly.changeActiveProject",
				"title": "Change Active Project",
				"when": "resourceLangId == oly"
			},
			{
				"command": "oly.changeActiveConfiguration",
				"title": "Change Active Configuration",
				"when": "resourceLangId == oly"
			},
			{
				"command": "oly.cleanWorkspace",
				"title": "Clean Workspace",
				"when": "resourceLangId == oly"
			}
		],
		"keybindings": [],
		"languages": [
			{
				"id": "oly",
				"aliases": [
					"Oly",
					"oly"
				],
				"extensions": [
					"oly",
					"olyx"
				],
				"configuration": "./language-configuration.json",
				"icon": {
					"light": "./icons/oly-file-light.png",
					"dark": "./icons/oly-file-dark.png"
				}
			}
		],
		"grammars": [
			{
				"language": "oly",
				"scopeName": "source.oly",
				"path": "./syntaxes/oly.tmLanguage.json"
			}
		],
		"configuration": {
			"type": "object",
			"title": "Oly",
			"properties": {
				"oly.languageServer.editedDocumentDiagnosticMaxDelay": {
					"scope": "application",
					"type": "number",
					"default": 500,
					"description": "Controls the maximum delay (ms) to publish document diagnostics when the current document has been edited."
				},
				"oly.languageServer.editedDocumentDependentDiagnosticDelay": {
					"scope": "application",
					"type": "number",
					"default": 1000,
					"description": "Controls the delay (ms) to publish document diagnostics after the currently edited documents has its diagnostics published."
				},
				"oly.languageServer.trace.server": {
					"scope": "application",
					"type": "string",
					"enum": [
						"off",
						"messages",
						"verbose"
					],
					"default": "off",
					"description": "Traces the communication between VS Code and the language server."
				},
				"oly.syntaxTree.explorer.enabled": {
					"scope": "application",
					"type": "boolean",
					"default": false,
					"description": "Shows the syntax tree of the active document in the explorer and allows navigation to a syntax node."				
				}
			}
		},
		"semanticTokenTypes": [
            {
                "id": "conditionalDirectiveBody",
                "superType": "conditionalDirectiveBody",
                "description": "A conditional directive body."
            }
        ],
        "configurationDefaults": {
            "editor.semanticTokenColorCustomizations": {
                "rules": {
                    "conditionalDirectiveBody": "#9B9B9B"
                }
            },
			"debug.allowBreakpointsEverywhere": true
        }
	}
}
