#target "dotnet: net7"

#reference "../Evergreen/src/Client/Evergreen.Client.Graphics.olyx"
#package "Veldrid,4.9.0" // TODO: Remove this when we fix transitive packages.
#package "Veldrid.StartupUtilities,4.9.0" // TODO: Remove this when we fix transitive packages.
#package "Veldrid.SPIRV,1.0.15" // TODO: Remove this when we fix transitive packages.

open System.Numerics
open Evergreen.Client.Graphics

main(): () =
    let window = Graphics.InitializeWindow(100, 100, 512, 512, "Evergreen Game Example")

    print("Graphics Device: " + Graphics.DeviceName + "\n")

    let meshDesc = MeshDescription.CreateHexagon(0.1)
    let materialDesc = MaterialDescription.Create()

    let hexagons = System.Collections.Generic.List<Matrix4x4>()

    let mutable i = 1
    while (i <= 3)
        hexagons.Add(Matrix4x4.CreateTranslation(Vector3(-0.2 * float32(i), 0, 0)))
        i <- i + 1
    let mutable i = 1
    while (i <= 3)
        hexagons.Add(Matrix4x4.CreateTranslation(Vector3(0.2 * float32(i), 0, 0)))
        i <- i + 1
    let mutable i = 1
    while (i <= 3)
        hexagons.Add(Matrix4x4.CreateTranslation(Vector3(0, -0.2 * float32(i), 0)))
        i <- i + 1
    let mutable i = 1
    while (i <= 3)
        hexagons.Add(Matrix4x4.CreateTranslation(Vector3(0, 0.2 * float32(i), 0)))
        i <- i + 1
    let hexagons = hexagons.ToArray()

    let mesh = Graphics.CreateMesh(meshDesc)
    let material = Graphics.CreateMaterial(materialDesc)
    let instances = Graphics.CreateInstances(hexagons)
    let drawCmd = DrawCommand(mesh, material, instances)

    let drawCmds = [drawCmd]

    while (window.Exists)
        let inputState = window.GetInputState()

        if (window.Exists)
            Graphics.Draw(drawCmds)

    let mutable i = 0
    let length = getLength(drawCmds)
    while (i < length)
        let cmd = drawCmds[i]
        i <- i + 1

    Graphics.Destroy()
